#mode:
#  type: Standalone
#  repository:
#    type: File
#  overwrite: false

spring:
  shardingsphere:
    datasource:
      names: ds-test-2020,ds-test-2021,ds-test-2022
      ds-test-2020:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/datasource_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: 1qaz2wsx
      ds-test-2021:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/datasource_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: 1qaz2wsx
      ds-test-2022:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/datasource_2?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: 1qaz2wsx
    sharding:
      tables:
        t_order:
          actual-data-nodes: ds-test-${2021..2022}.t_order_${0..3}
          database-strategy:
            standard:
              sharding-column: order_id    # 分片字段（分片键）
              preciseAlgorithmClassName: com.clearvision.shardingspheresample.common.config.DatabaseShardingConfig
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: tb_order_$->{order_id % 3}
#      default-database-strategy:
#        inline:
#          sharding-column: user_id
#          algorithm-expression: ds-test-$->{user_id}
#      binding-tables: t_order,t_order_item
#      broadcast-tables: t_address


#          actualDataNodes: ds-test-${2021..2022}.t_order_${0..2}
#          actualDataNodes: ds-test-${2021..2022}.t_order_${0..2}
#          databaseStrategy: # 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一
#            standard: # 用于单分片键的标准分片场景
#              shardingColumn: order_id # 分片列名称
#              shardingAlgorithmName: database-inline # 分片算法名称
#          tableStrategy:
#            standard:
#              shardingColumn: order_id
#              shardingAlgorithmName: t-order-inline
#          databaseStrategy:
#            inline:
#              shardingColumn: user_id
#              algorithmExpression: ds-test-$->{user_id}
#          tableStrategy:
#            inline:
#              sharding-column: order_id
#              algorithmExpression: t_order_$->{order_id % 10}
#          tableStrategy:
#            standard:
#              shardingColumn: order_id
#              shardingAlgorithmName: t-order-inline
#          keyGenerateStrategy:
#            column: order_id
#            keyGeneratorName: snowflake
#        t_order_item:
#          actualDataNodes: ds_${0..1}.t_order_item_${0..1}
#          tableStrategy:
#            standard:
#              shardingColumn: order_id
#              shardingAlgorithmName: t_order-item-inline
#          keyGenerateStrategy:
#            column: order_item_id
#            keyGeneratorName: snowflake
#        t_account:
#          actualDataNodes: ds_${0..1}.t_account_${0..1}
#          tableStrategy:
#            standard:
#              shardingAlgorithmName: t-account-inline
#          keyGenerateStrategy:
#            column: account_id
#            keyGeneratorName: snowflake
#      defaultShardingColumn: account_id
#      bindingTables:
#        - t_order,t_order_item
#      broadcastTables:
#        - t_address
#      defaultDatabaseStrategy:
#        standard:
#          shardingColumn: user_id
#          shardingAlgorithmName: database-inline
#      defaultTableStrategy:
#        none:
#      shardingAlgorithms:
#        database-inline:
#          type: INLINE
#          props:
#            algorithm-expression: ds-test-${user_id} #database策略 ds_? 数据库后缀策略选择
#        t-order-inline:
#          type: INLINE
#          props:
#            algorithm-expression: t_order_${order_id % 3} #table策略 tb_order_？数据库表后缀策略选择
#        t_order-item-inline:
#          type: INLINE
#          props:
#            algorithm-expression: t_order_item_${order_id % 2}
#        t-account-inline:
#          type: INLINE
#          props:
#            algorithm-expression: t_account_${account_id % 2}
#        keyGenerators:
#          snowflake:
#            type: SNOWFLAKE
    props:
      sql-show: true
    enabled: true